#!/usr/bin/env python

import os
import subprocess
from optparse import OptionParser
import numpy as np

def set_optparser():
	'''Options setter
	'''
	usage = '''usage: %prog [options]
	'''
	optparser = OptionParser(version='%prog 1.0.1',usage=usage,add_help_option=False)
	optparser.add_option("-h","--help",action="help",
		help="show this help message and exit")
	optparser.add_option('-i','--input',dest='input',type='string',
		help='Probability file generated by DELTA', default='pred')
	optparser.add_option('-j','--position',dest='position',type='string',
		help='Sliding window positions in BED format, usually named as *_count.bed', default='NA')
	optparser.add_option('-p','--probability',dest='pcutoff',type='float',
		help='Probability cutoff for predicted enhancers', default='NA')
	return optparser

def main():
	options,args = set_optparser().parse_args()
	pval = options.pcutoff
	fin1 = open(options.input, 'r')
	fin2 = open(options.position, 'r')
	posvalfull = []
	for ln in fin1:
		ln2 = fin2.next().strip()
		lab = float(ln.strip().split()[-1])
		if lab >= pval:
			posvalfull.append(ln2+'\t'+str(lab))
	fin1.close()
	fin2.close()

	fout = open('pred_enh_center.bed', 'w')
	if posvalfull != []:
		ln = posvalfull[0]
		Lprev = ln.split()
		valvector = [float(Lprev[-1])]
		posvector = [ln]
		totnum = 0
		for i in range(1,len(posvalfull)):
			ln = posvalfull[i].strip()
			Lln = ln.split()
			if Lln[0] == Lprev[0] and (int(Lln[1])-int(Lprev[1])) <= 100:
				valvector.append(float(Lln[-1]))
				posvector.append(ln)
			else:
				valvector = np.asarray(valvector)
				if len(posvector) > 1:
					prev = 0
					i = 0
					state = 'L'
					for val in valvector:
						if state == 'L' and val < prev:
							fout.write(posvector[i-1]+'\n')
							totnum += 1
							state = 'R'
						if state == 'R' and val > prev:
							state = 'L'
						prev = val
						i += 1
					if state == 'L' and val >= prev:
						fout.write(posvector[-1]+'\n')
						totnum += 1
				else:
					pass
				valvector = [float(Lln[-1])]
				posvector = [ln]
			Lprev = Lln
		fout.close()

main()
